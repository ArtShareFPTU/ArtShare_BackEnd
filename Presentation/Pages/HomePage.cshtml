@page
@using System.Reflection
@model Presentation.Pages.HomePage

@{
    Layout = "Shared/_Layout";
    ViewData["Title"] = "HomePage";
}
<style>
    .container1 {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        text-align: center;
        margin: 40px 20px 0 20px;
    }

        .container1 .heading {
            width: 50%;
            padding-bottom: 50px;
        }

        .container1 .box {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
        }

            .container1 .box .dream {
                display: flex;
                flex-direction: column;
                width: 32.5%;
            }

                .container1 .box .dream img {
                    width: 100%;
                    padding-bottom: 15px;
                    border-radius: 5px;
                }
    .backhead{
        height: 340px;
        width: 100%;
        margin-top:50px;
    }
    .backhead .imax{
        width: 100%;
        height: inherit;
    }

</style>

<!-- Masthead-->
<header class="backhead">
    
        <img class="imax" src="/assets/img/background1.jpg" />
    


</header>

<meta name="viewport" content="width:device-width, initial-scale=1"/>
<link href="/homelayout/flexbin.css" type="text/css" rel="stylesheet" media="all"/>
<style>
    body {
        margin: 0;
    }

    .con1 {
        display: flex;
        position: relative;
    }

        .con1 img {
            max-width: 100%;
            height: auto;
            display: block;
            border-radius: 5px;
        }

    .image1 {
        display: block;
    }

    .overlay1 {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        height: 100%;
        width: 100%;
        background-color: rgba(0, 0, 0, 0.5); /* Màu đen với độ trong suốt 0.5 */
        opacity: 0; /* Mặc định ẩn overlay */
        transition: opacity 0.5s ease;
    }

    .con1:hover .overlay1 {
        opacity: 1;
    }

    .text1 {
        color: white;
        font-size: 20px;
        position: absolute;
        top: 70%;
        left: 30%;
        transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        padding: 10px;
    }

    .category-box {
        margin: 9px 73px;
        position: relative;
        overflow: hidden;
    }

    .category-container {
        white-space: nowrap;
        display: flex;
        overflow: hidden;
        margin:0 30px;
        align-content: center;
    }
    .category-container button{
            padding: 8px 18px;
            margin-left:5px;
            font-size: large;
            border: none;
            background-color: #2c2c2c;
            color: white;
            border-radius: 5px;
    }
    .category-box a {
        text-decoration: none;
        padding: 8px;
        color: white;
        background-color: #2c2c2c;
        font-size: larger;
        border-radius: 3px;
        margin-right: 5px;
    }

    .scroll-left,
    .scroll-right {
        position: absolute;
        top: 0;
        bottom: 0;
        width: 30px;
        background: transparent;
        border: none;
        color: black;
        height: 100%;
        font-size: x-large;
        
    }

        .scroll-left:hover,
        .scroll-right:hover{
            background-color: #8e8e8ea8;
        }

    .scroll-left {
        left: 0;
    }

    .scroll-right {
        right: 0;
    }


</style>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var images = document.querySelectorAll(".con1 img");
        images.forEach(function (image) {
            image.addEventListener("contextmenu", function (e) {
                e.preventDefault(); 
                var watermarkText = "ARTOln"; 
                var canvas = document.createElement("canvas");
                var context = canvas.getContext("2d");
                var img = new Image();
                img.crossOrigin = "Anonymous";
                img.src = this.src;
                img.onload = function () {
                    canvas.width = img.width;
                    canvas.height = img.height;
                    context.drawImage(img, 0, 0);
                    context.font = "bold 30px Arial";
                    context.fillStyle = "rgba(255, 255, 255, 0.5)";
                    context.fillText(watermarkText, img.width - 200, img.height - 20);
                    var link = document.createElement("a");
                    link.download = "watermarked_image.png"; 
                    link.href = canvas.toDataURL("image/png");
                    link.click(); 
                };
            });
        });
    });
</script>

<body>
    <div class="category-box">
        <div class="category-container">
            @foreach (var item in Model.Category)
            {
                <form  asp-page-handler="CategoryById" method="post">
                    <input type="hidden" name="categoryId" value="@Html.DisplayFor(modelItem => item.Id)" />
                    <button  type="submit">@Html.DisplayFor(modelItem => item.Title)</button>
                </form>
                
            }
        </div>

        <button class="scroll-left">&lt;</button>
        <button class="scroll-right">&gt;</button>
    </div>
<div class="flexbin flexbin-margin" style="margin: 0 70px;">
    @foreach (var item in Model.Artwork)
    {
        <div class="con1" >
            <img src="@Html.DisplayFor(modelItem => item.Url)"/>
            <div class="overlay1">
                <div class="text1">
                    <h2 size="20" style="font-family: 'Arial Black'">
                        @Html.DisplayFor(modelItem => item.Title)<br>
                    </h2>
                    <h3>
                        <a style="font-family: 'Arial'; color:white; text-decoration: none" asp-page="ProfilePage" asp-route-id="@item.AccountId" asp-page-handler="ArtistProfile">@Html.DisplayFor(modelItem => item.Account.UserName)</a>
                    </h3>
                    <p size="15" style="font-family: 'Arial'; display: inline-block; vertical-align: middle;">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star" viewBox="0 0 16 16">
                            <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.56.56 0 0 0-.163-.505L1.71 6.745l4.052-.576a.53.53 0 0 0 .393-.288L8 2.223l1.847 3.658a.53.53 0 0 0 .393.288l4.052.575-2.906 2.77a.56.56 0 0 0-.163.506l.694 3.957-3.686-1.894a.5.5 0 0 0-.461 0z"/>
                        </svg>
                        @Html.DisplayFor(modelItem => item.Likes)
                    </p>
                    <h5>
                        <a style="font-family: 'Arial'; color:white; text-decoration: none" asp-page="./DetailPage" asp-route-id="@item.Id">Detail</a>
                    </h5>
                </div>
            </div>
        </div>
    }
</div>
<script>

        document.addEventListener('DOMContentLoaded', function () {
            const container = document.querySelector('.category-container');
            const scrollRightBtn = document.querySelector('.scroll-right');
            const scrollLeftBtn = document.querySelector('.scroll-left');

            scrollRightBtn.addEventListener('click', function () {
                container.scrollLeft += 300; // Điều chỉnh giá trị này tùy theo độ dài bạn muốn di chuyển
            });
            scrollLeftBtn.addEventListener('click', function () {
                container.scrollLeft -= 300; // Điều chỉnh giá trị này tùy theo độ dài bạn muốn di chuyển
            });
        });
</script>
</body>
